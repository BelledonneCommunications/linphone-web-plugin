cmake_minimum_required(VERSION 2.6)
set(CMAKE_BACKWARDS_COMPATIBILITY 2.6)

if(WIN32)
	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /SAFESEH:NO")
	set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL} /SAFESEH:NO")
	set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /SAFESEH:NO")
	set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO} /SAFESEH:NO")
	set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /SAFESEH:NO")
	set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "${CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL} /SAFESEH:NO")
	set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /SAFESEH:NO")
	set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO} /SAFESEH:NO")
	set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} /SAFESEH:NO")
	set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL "${CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL} /SAFESEH:NO")
	set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "${CMAKE_MODULE_LINKER_FLAGS_RELEASE} /SAFESEH:NO")
	set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO "${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO} /SAFESEH:NO")
endif(WIN32)


set(MS2_ENABLE_GSM OFF CACHE BOOL "Build mediastreamer2 with the GSM codec.")


include(ExternalProject)

if(WIN32)
	set(LIB_INSTALL_DIR "bin")

	# add these flags to the build of all the external projects
	set(RECURSIVE_C_FLAGS "/D _WIN32_WINNT=0x0501 /D _ALLOW_KEYWORD_MACROS")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${RECURSIVE_C_FLAGS}")
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} ${RECURSIVE_C_FLAGS}")
	set(CMAKE_C_FLAGS_MINSIZEREL "${CMAKE_C_FLAGS_MINSIZEREL} ${RECURSIVE_C_FLAGS}")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} ${RECURSIVE_C_FLAGS}")
	set(CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO} ${RECURSIVE_C_FLAGS}")
else(WIN32)
	set(LIB_INSTALL_DIR "lib")
endif(WIN32)

set(GENERAL_EP_VARS)

macro(_expand_external_project_vars)
  set(GENERAL_EP_ARGS "")
  set(GENERAL_EP_VARNAMES "")
  foreach(arg ${GENERAL_EP_VARS})
    string(REPLACE ":" ";" varname_and_vartype ${arg})
    set(target_info_list ${target_info_list})
    list(GET varname_and_vartype 0 _varname)
    list(GET varname_and_vartype 1 _vartype)
    list(APPEND GENERAL_EP_ARGS -D${_varname}:${_vartype}=${${_varname}})
    list(APPEND GENERAL_EP_VARNAMES ${_varname})
  endforeach()
endmacro()

list(APPEND GENERAL_EP_VARS
	CMAKE_SKIP_RPATH:BOOL
	CMAKE_MODULE_PATH:PATH
	CMAKE_BUILD_TYPE:STRING
	CMAKE_CXX_COMPILER:PATH
	CMAKE_CXX_FLAGS:STRING
	CMAKE_CXX_FLAGS_DEBUG:STRING
	CMAKE_CXX_FLAGS_MINSIZEREL:STRING
	CMAKE_CXX_FLAGS_RELEASE:STRING
	CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING
	CMAKE_C_COMPILER:PATH
	CMAKE_C_FLAGS:STRING
	CMAKE_C_FLAGS_DEBUG:STRING
	CMAKE_C_FLAGS_MINSIZEREL:STRING
	CMAKE_C_FLAGS_RELEASE:STRING
	CMAKE_C_FLAGS_RELWITHDEBINFO:STRING
	CMAKE_EXE_LINKER_FLAGS:STRING
	CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING
	CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING
	CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING
	CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING
	CMAKE_MODULE_LINKER_FLAGS:STRING
	CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING
	CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING
	CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING
	CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING
	CMAKE_SHARED_LINKER_FLAGS:STRING
	CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING
	CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING
	CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING
	CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING
	CMAKE_GENERATOR:STRING
	CMAKE_EXTRA_GENERATOR:STRING
	CMAKE_INSTALL_PREFIX:PATH
	CMAKE_LIBRARY_OUTPUT_DIRECTORY:PATH
	CMAKE_ARCHIVE_OUTPUT_DIRECTORY:PATH
	CMAKE_RUNTIME_OUTPUT_DIRECTORY:PATH
	CMAKE_BUNDLE_OUTPUT_DIRECTORY:PATH
	CMAKE_SHARED_LINKER_FLAGS:STRING
	CMAKE_EXE_LINKER_FLAGS:STRING
	CMAKE_MODULE_LINKER_FLAGS:STRING
	LIB_INSTALL_DIR:STRING
)

_expand_external_project_vars()

ExternalProject_Add(EP_polarssl
	SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/polarssl
	CMAKE_ARGS ${GENERAL_EP_ARGS}
)

if(WIN32)
	ExternalProject_Add(EP_antlr3c
		SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/antlr3/runtime/C
		CMAKE_ARGS ${GENERAL_EP_ARGS}
	)

	ExternalProject_Add(EP_bellesip
		SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/belle-sip
		CMAKE_ARGS ${GENERAL_EP_ARGS} -DANTLR3_ROOT_DIR=${CMAKE_CURRENT_SOURCE_DIR}/antlr3
	)
	add_dependencies(EP_bellesip EP_antlr3c EP_polarssl)

	ExternalProject_Add(EP_xml2
		SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/cmake/libxml2
		CMAKE_ARGS ${GENERAL_EP_ARGS}
	)

	ExternalProject_Add(EP_speex
		SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/speex
		CMAKE_ARGS ${GENERAL_EP_ARGS}
	)

	ExternalProject_Add(EP_ortp
		SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/linphone/oRTP
		CMAKE_ARGS ${GENERAL_EP_ARGS}
	)

	ExternalProject_Add(EP_mediastreamer2
		SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/linphone/mediastreamer2
		CMAKE_ARGS ${GENERAL_EP_ARGS} -DMS2_ENABLE_GSM=0
	)
	add_dependencies(EP_mediastreamer2 EP_ortp EP_speex)

	ExternalProject_Add(EP_linphone
		SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/linphone
		CMAKE_ARGS ${GENERAL_EP_ARGS}
	)
	add_dependencies(EP_linphone EP_mediastreamer2 EP_bellesip EP_xml2)
else(WIN32)
	set(EP_antlr3c_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/antlr3/runtime/C)
	ExternalProject_Add(EP_antlr3c
		SOURCE_DIR ${EP_antlr3c_SOURCE_DIR}
		CONFIGURE_COMMAND ${EP_antlr3c_SOURCE_DIR}/autogen.sh && ${EP_antlr3c_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX}
	)

	set(EP_bellesip_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/belle-sip)
	ExternalProject_Add(EP_bellesip
		SOURCE_DIR ${EP_bellesip_SOURCE_DIR}
		CONFIGURE_COMMAND ${EP_bellesip_SOURCE_DIR}/autogen.sh && ${EP_bellesip_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX}
	)
	add_dependencies(EP_bellesip EP_antlr3c EP_polarssl)

	set(EP_xml2_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libxml2)
	ExternalProject_Add(EP_xml2
		SOURCE_DIR ${EP_xml2_SOURCE_DIR}
		CONFIGURE_COMMAND ${EP_xml2_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX} --without-legacy --with-catalog --with-docbook --without-python --with-c14n
	)

	set(EP_speex_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/speex)
	ExternalProject_Add(EP_speex
		SOURCE_DIR ${EP_speex_SOURCE_DIR}
		CONFIGURE_COMMAND ${EP_speex_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX} --enable-fixed-point --disable-float-api --disable-vbr --disable-ogg --disable-oggtest
	)

	set(EP_linphone_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/linphone)
	ExternalProject_Add(EP_linphone
		SOURCE_DIR ${EP_linphone_SOURCE_DIR}
		CONFIGURE_COMMAND ${EP_linphone_SOURCE_DIR}/autogen.sh && ${EP_linphone_SOURCE_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX} --disable-nls --enable-console_ui=no --enable-gtk_ui=no --enable-assistant=no --enable-debug=yes --enable-x11=no --disable-glx --disable-zrtp
	)
	add_dependencies(EP_linphone EP_bellesip EP_xml2 EP_speex)
endif(WIN32)
